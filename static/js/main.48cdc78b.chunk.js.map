{"version":3,"sources":["App.tsx","Components/Button/Button.tsx","index.tsx"],"names":["SortType","Button","children","props","type","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPABET","sortByLength","LENGTH","reverseOrder","resetOrder","this","visibleGoods","goods","sort","goodA","goodB","localeCompare","length","reverse","getSortedGoods","shouldRenderReset","className","classNames","onClick","map","good","uuid","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,sICdQC,EAA0B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBACjE,OACE,gDACEC,KAAK,UACDD,GAFN,aAIGD,MDLMG,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCE,IAAMM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUT,EAASa,WAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUT,EAASe,UAXvC,EAcEC,aAAe,WACb,EAAKJ,UAAS,SAAAL,GACZ,MAAQ,CAAEC,YAAaD,EAAMC,gBAhBnC,EAoBES,WAAa,WACX,EAAKL,SAAS,CACZH,SAAUT,EAASU,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZW,EArDH,SACLC,EACAb,GAEA,IAAQE,EAAyBF,EAAzBE,SAAUD,EAAeD,EAAfC,WACZW,EAAe,YAAIC,GAAOC,MAAK,SAACC,EAAOC,GAC3C,OAAQd,GACN,KAAKT,EAASa,QACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAKvB,EAASe,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAIb,OAAOjB,EACHW,EAAaO,UACbP,EAiCmBQ,CAAetB,EAClCa,KAAKX,OAEDqB,EAAoBpB,GAAcC,IAAaT,EAASU,KAE9D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEA,UAAWC,IACT,SACA,UACA,CAAE,WAAYrB,IAAaT,EAASa,UAEtCkB,QAASb,KAAKP,eANhB,iCAWA,cAAC,EAAD,CACEkB,UAAWC,IACT,SACA,aACA,CAAE,WAAYrB,IAAaT,EAASe,SAEtCgB,QAASb,KAAKJ,aANhB,4BAWA,cAAC,EAAD,CACEe,UAAWC,IACT,SACA,aACA,CAAE,YAAatB,IAEjBuB,QAASb,KAAKF,aANhB,qBAWCY,GACC,cAAC,EAAD,CACEC,UAAU,4BACVE,QAASb,KAAKD,WAFhB,sBASJ,6BACE,6BACGE,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIC,gCAtFrB,GAAyBC,aEnDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.48cdc78b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { uuid } from 'uuidv4';\nimport classNames from 'classnames';\nimport { Button } from './Components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getSortedGoods(\n  goods: string[],\n  state: State,\n) {\n  const { sortType, isReversed } = state;\n  const visibleGoods = [...goods].sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseOrder = () => {\n    this.setState(state => {\n      return ({ isReversed: !state.isReversed });\n    });\n  };\n\n  resetOrder = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const visibleGoods = getSortedGoods(goodsFromServer,\n      this.state);\n\n    const shouldRenderReset = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <Button\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </Button>\n\n          <Button\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </Button>\n\n          <Button\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseOrder}\n          >\n            Reverse\n          </Button>\n\n          {shouldRenderReset && (\n            <Button\n              className=\"button is-danger is-light\"\n              onClick={this.resetOrder}\n            >\n              Reset\n            </Button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={uuid()}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  children: React.ReactNode;\n};\n\nexport const Button: React.FC<Props> = ({ children, ...props }) => {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}