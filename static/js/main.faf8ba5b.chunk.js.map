{"version":3,"sources":["App.tsx","Components/Button/Button.tsx","index.tsx"],"names":["SortType","Button","children","props","type","goodsFromServer","App","state","isReversed","sortType","NONE","setOrderAlphabetical","setState","ALPABET","setOrderLength","LENGTH","setOrderReverse","resetOrder","this","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","checkOnChanges","className","classNames","onClick","map","good","uuid","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,8HCdQC,EAA0B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBACjE,OACE,gDACEC,KAAK,UACDD,GAFN,aAIGD,MDLMG,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAWE,IAAMM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,qBAAuB,WACrB,EAAKC,SAAS,CAAEH,SAAUT,EAASa,WAPvC,EAUEC,eAAiB,WACf,EAAKF,SAAS,CAAEH,SAAUT,EAASe,UAXvC,EAcEC,gBAAkB,WAChB,EAAKJ,UAAS,SAAAL,GACZ,MAAQ,CAAEC,YAAaD,EAAMC,gBAhBnC,EAoBES,WAAa,WACX,EAAKL,SAAS,CACZH,SAAUT,EAASU,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEdW,EAAe,UAAId,GAAiBe,MAAK,SAACC,EAAOC,GACnD,OAAQb,GACN,KAAKT,EAASa,QACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKtB,EAASe,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAIbL,EAAeX,EACXW,EAAaM,UACbN,EAEJ,IAAMO,EAAiBlB,GAAcC,IAAaT,EAASU,KAE3D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEA,UAAWC,IACT,SACA,UACA,CAAE,WAAYnB,IAAaT,EAASa,UAEtCgB,QAASX,KAAKP,qBANhB,iCAWA,cAAC,EAAD,CACEgB,UAAWC,IACT,SACA,aACA,CAAE,WAAYnB,IAAaT,EAASe,SAEtCc,QAASX,KAAKJ,eANhB,4BAWA,cAAC,EAAD,CACEa,UAAWC,IACT,SACA,aACA,CAAE,YAAapB,IAEjBqB,QAASX,KAAKF,gBANhB,qBAWCU,GACC,cAAC,EAAD,CACEC,UAAU,4BACVE,QAASX,KAAKD,WAFhB,sBASJ,6BACE,6BACGE,EAAaW,KAAI,SAAAC,GAChB,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIC,gCArGvB,GAAyBC,aE5BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.faf8ba5b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { uuid } from 'uuidv4';\nimport classNames from 'classnames';\nimport { Button } from './Components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  setOrderAlphabetical = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  setOrderLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  setOrderReverse = () => {\n    this.setState(state => {\n      return ({ isReversed: !state.isReversed });\n    });\n  };\n\n  resetOrder = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    let visibleGoods = [...goodsFromServer].sort((goodA, goodB) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return goodA.localeCompare(goodB);\n\n        case SortType.LENGTH:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    visibleGoods = isReversed\n      ? visibleGoods.reverse()\n      : visibleGoods;\n\n    const checkOnChanges = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <Button\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.setOrderAlphabetical}\n          >\n            Sort alphabetically\n          </Button>\n\n          <Button\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.setOrderLength}\n          >\n            Sort by length\n          </Button>\n\n          <Button\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.setOrderReverse}\n          >\n            Reverse\n          </Button>\n\n          {checkOnChanges && (\n            <Button\n              className=\"button is-danger is-light\"\n              onClick={this.resetOrder}\n            >\n              Reset\n            </Button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => {\n              return (\n                <li\n                  data-cy=\"Good\"\n                  key={uuid()}\n                >\n                  {good}\n                </li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  children: React.ReactNode;\n};\n\nexport const Button: React.FC<Props> = ({ children, ...props }) => {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}